#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Brewer colors
# see >>>>>>>>>>>  http://colorbrewer2.org/
brewer_norm10 = ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a']
brewer_norm8 = ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf']
brewer_norm6 = ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c']
brewer_norm4 = ['#a6cee3','#1f78b4','#b2df8a','#33a02c']
brewer_deep9 = ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999']
brewer_deep8 = ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf']
brewer_deep6 = ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33']
brewer_deep4 = ['#e41a1c','#377eb8','#4daf4a','#984ea3']
brewer_mute8 = ['#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666']
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Tableau colors

tableau20 = [(31, 119, 180), (174, 199, 232), (255, 127, 14), (255, 187, 120),    
             (44, 160, 44), (152, 223, 138), (214, 39, 40), (255, 152, 150),    
             (148, 103, 189), (197, 176, 213), (140, 86, 75), (196, 156, 148),    
             (227, 119, 194), (247, 182, 210), (127, 127, 127), (199, 199, 199),    
             (188, 189, 34), (219, 219, 141), (23, 190, 207), (158, 218, 229)]    
tableau10 = [(31, 119, 180), (255, 127, 14), (44, 160, 44), (214, 39, 40),
             (148, 103, 189), (140, 86, 75), (227, 119, 194), (127, 127, 127),
             (188, 189, 34), (23, 190, 207)]  

tableau10_med = [(114, 158, 206), (255, 158, 74), (103, 191, 92), (237, 102, 93),
             (173, 139, 201), (168, 120, 110), (237, 151, 202), (162, 162, 162),
             (205, 204, 93), (109, 204, 218)]  
# Scale the RGB values to the [0, 1] range, which is the format matplotlib accepts.    

tableau20 = [(tab[0]/255., tab[1]/255., tab[2]/255.) for tab in tableau20]
tableau10 = [(tab[0]/255., tab[1]/255., tab[2]/255.) for tab in tableau10]
tableau10_med = [(tab[0]/255., tab[1]/255., tab[2]/255.) for tab in tableau10_med]

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Seaborn colors

flatui = ['#9b59b6', '#3498db', '#95a5a6', '#e74c3c', '#34495e', '#2ecc71']    
sns_deep = [(0.2980392156862745, 0.4470588235294118, 0.6901960784313725), (0.3333333333333333, 0.6588235294117647, 0.40784313725490196), (0.7686274509803922, 0.3058823529411765, 0.3215686274509804), (0.5058823529411764, 0.4470588235294118, 0.6980392156862745), (0.8, 0.7254901960784313, 0.4549019607843137), (0.39215686274509803, 0.7098039215686275, 0.803921568627451)]
sns_bright = [(0.0, 0.24705882352941178, 1.0), (0.011764705882352941, 0.9294117647058824, 0.22745098039215686), (0.9098039215686274, 0.0, 0.043137254901960784), (0.5411764705882353, 0.16862745098039217, 0.8862745098039215), (1.0, 0.7686274509803922, 0.0), (0.0, 0.8431372549019608, 1.0)]
sns_muted = [(0.2823529411764706, 0.47058823529411764, 0.8117647058823529), (0.41568627450980394, 0.8, 0.396078431372549), (0.8392156862745098, 0.37254901960784315, 0.37254901960784315), (0.7058823529411765, 0.48627450980392156, 0.7803921568627451), (0.7686274509803922, 0.6784313725490196, 0.4), (0.4666666666666667, 0.7450980392156863, 0.8588235294117647)]
# Derive the color scheme
if 0:
    import seaborn as sns

    # https://stanford.edu/~mwaskom/software/seaborn/tutorial/color_palettes.html
    #import seaborn as sns
    
    flatui = ["#9b59b6", "#3498db", "#95a5a6", "#e74c3c", "#34495e", "#2ecc71"]
    sns_flatui = sns.color_palette(flatui)
    if 0:
        for y in sns_flatui:
            col = [x*255 for x in y]
            print(col)
    
    sns_pal = ['deep', 'muted', 'pastel', 'bright', 'dark', 'colorblind']
    snspal = sns.color_palette(sns_pal[1],6)
    snspal = sns.palplot(sns.color_palette("Paired", 14))
    for y in sns.color_palette("Paired",6):
        col = [x*255 for x in y]
        print(col)
    #print(col)
    
    sns_hls = sns.color_palette('hls', 16)
    sns_husl = sns.color_palette('husl', 16)
    
    #snspal = sns.color_palette("Paired",16)
    
    #sns.reset_orig
    # show palletes
    sns.palplot(snspal)

